@page "/AddItemToDb"

@inject AdminServices admin
@inject IDispatcher Dispatcher

<EditForm Model="@item" OnValidSubmit="@CreateItem">
    <DataAnnotationsValidator />
    <ValidationSummary />
    @* Name *@
    <div class="form-group row">
        <label asp-for="Name" class="col-4 col-form-label">Item Name</label>
        <div class="col-8">
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text">
                        <i class="fa fa-arrow-circle-o-right"></i>
                    </div>
                </div>
                <InputText id="name" @bind-Value="item.Name" placeholder="Enter item name" aria-describedby="nameHelpBlock" class="border-b-2 border-gray-400 focus-within:border-teal-500" />
            </div>
            <span id="nameHelpBlock" class="form-text text-muted">Name as known by staff (brand, type, only if used by staff.)</span>
        </div>
    </div>
    @* MinCount *@
    <div class="form-group row">
        <label asp-for="MinCount" class="col-4 col-form-label">Reserve Stock Threshold</label>
        <div class="col-8">
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text">
                        <i class="fa fa-cube"></i>
                    </div>
                </div>
                <InputNumber @bind-Value="item.MinCount" id="minCount" placeholder="Amount" aria-describedby="minCountHelpBlock" class="border-b-2 border-gray-400 focus-within:border-teal-500" />
            </div>
            <span id="minCountHelpBlock" class="form-text text-muted">Amount below this should trigger a new order or close watch on the item.</span>
        </div>
    </div>
    @* DaysBetweenUpdates *@
    <div class="form-group row">
        <label asp-for="DaysBetweenUpdates" class="col-4 col-form-label">Number of Days between scheduled updates.</label>
        <div class="col-8">
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text">
                        <i class="fa fa-calendar-check-o"></i>
                    </div>
                </div>
                <InputNumber id="daysBetweenUpdates" @bind-Value="item.DaysBetweenUpdates" placeholder="Enter number of days" aria-describedby="daysBetweenUpdatesHelpBlock" class="border-b-2 border-gray-400 focus-within:border-teal-500" />
            </div>
            <span id="daysBetweenUpdatesHelpBlock" class="form-text text-muted">The number of days before next recommended update of count.</span>
        </div>
    </div>
    @* DaysBeforeNotifyAllCurators *@
    <div class="form-group row">
        <label asp-for="DaysBeforeNotifyAllCurators" class="col-4 col-form-label">Days without update before general notice</label>
        <div class="col-8">
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text">
                        <i class="fa fa-calendar-plus-o"></i>
                    </div>
                </div>
                <InputNumber id="daysBeforeNotifyAllCurators" @bind-Value="item.DaysBeforeNotifyAllCurators" placeholder="Enter number of days" aria-describedby="daysBeforeNotifyAllCuratorsHelpBlock" class="border-b-2 border-gray-400 focus-within:border-teal-500" />
            </div>
            <span id="daysBeforeNotifyAllCuratorsHelpBlock" class="form-text text-muted">Period before general notice to all curators that this item needs an updated count.</span>
        </div>
    </div>
    <div class="form-group row">
        <div class="offset-4 col-8">
            <button type="submit" class="px-3 py-2 rounded-md cursor-pointer bg-blue-600 text-white  hover:bg-blue-300 border-blue-700 border">
                Add Item
            </button>
        </div>
    </div>

</EditForm>

@code {

    private Item item = new Item();

    private async void CreateItem()
    {
        await admin.CreateItem(item);

        Dispatcher.Dispatch(new FetchItemListAction());

        item = new Item();

    }



    

}
