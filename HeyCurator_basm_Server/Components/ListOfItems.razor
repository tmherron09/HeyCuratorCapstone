@inherits Fluxor.Blazor.Web.Components.FluxorComponent



@using HeyCurator_basm_Server.Store.ItemListCase


<h3>List of Items</h3>


<table class="table table-bordered table-hover">
    <thead>
        <tr class="table-info">
            <th scope="col">
                Item Name
            </th>
            <th scope="col">
                Minimum Reserve Count
            </th>
            <th scope="col">
                Time between updates
            </th>
            <th scope="col">
                Time before group notification
            </th>
            <th scope="col">
                Last Updated
            </th>
            <th scope="col">
                Time To Update Next
            </th>
            <th scope="col">
                Date to notify group if not updated
            </th>
        </tr>
    </thead>
    <tbody>
        @if (ItemListState.Value.IsLoading || ItemListState.Value.Items == null)
        {
            <tr class="text-center text-muted">
                ...Loading
            </tr>
        }
        else
        {

            @foreach (var item in ItemListState.Value.Items)
            {
                <tr>
                    <td>
                        @item.Name
                    </td>
                    <td>
                        @item.MinCount
                    </td>
                    <td>
                        @item.DaysBetweenUpdates
                    </td>
                    <td>
                        @item.DaysBeforeNotifyAllCurators
                    </td>
                    <td>
                        @item.DateOfLastUpdate
                    </td>
                    <td>
                        @item.UpdateByDate
                    </td>
                    <td>
                        @item.DateNotifyCurators
                    </td>
                </tr>
            }
        }

    </tbody>
</table>






@code {


    [Inject]
    private IState<ItemListState> ItemListState { get; set; }
    [Inject]
    private IDispatcher Dispatcher { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Dispatcher.Dispatch(new FetchItemListAction());
    }


 


}
